directive @goField(forceResolver: Boolean, name: String) on FIELD_DEFINITION | INPUT_FIELD_DEFINITION
directive @goModel(model: String, models: [String!]) on OBJECT | INPUT_OBJECT | SCALAR | ENUM | INTERFACE | UNION
type Author implements Node {
  id: ID!
  name: String!
  email: String!
  books: [Book!]
}
"""A connection to a list of items."""
type AuthorConnection {
  """A list of edges."""
  edges: [AuthorEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}
"""An edge in a connection."""
type AuthorEdge {
  """The item at the end of the edge."""
  node: Author
  """A cursor for use in pagination."""
  cursor: Cursor!
}
"""Ordering options for Author connections"""
input AuthorOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order Authors."""
  field: AuthorOrderField!
}
"""Properties by which Author connections can be ordered."""
enum AuthorOrderField {
  NAME
  EMAIL
}
type Book implements Node {
  id: ID!
  title: String!
  genre: String!
  publicationDate: String!
  isbn: String!
  createdAt: Time!
  author: Author
}
"""A connection to a list of items."""
type BookConnection {
  """A list of edges."""
  edges: [BookEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}
"""An edge in a connection."""
type BookEdge {
  """The item at the end of the edge."""
  node: Book
  """A cursor for use in pagination."""
  cursor: Cursor!
}
"""
CreateAuthorInput is used for create Author object.
Input was generated by ent.
"""
input CreateAuthorInput {
  name: String!
  email: String!
  bookIDs: [ID!]
}
"""
CreateBookInput is used for create Book object.
Input was generated by ent.
"""
input CreateBookInput {
  title: String!
  genre: String!
  publicationDate: String!
  isbn: String!
  createdAt: Time
  authorID: ID
}
"""
Define a Relay Cursor type:
https://relay.dev/graphql/connections.htm#sec-Cursor
"""
scalar Cursor
"""
An object with an ID.
Follows the [Relay Global Object Identification Specification](https://relay.dev/graphql/objectidentification.htm)
"""
interface Node @goModel(model: "github.com/pratikjagrut/book-catalog/ent.Noder") {
  """The id of the object."""
  id: ID!
}
"""Possible directions in which to order a list of items when provided an `orderBy` argument."""
enum OrderDirection {
  """Specifies an ascending order for a given `orderBy` argument."""
  ASC
  """Specifies a descending order for a given `orderBy` argument."""
  DESC
}
"""
Information about pagination in a connection.
https://relay.dev/graphql/connections.htm#sec-undefined.PageInfo
"""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!
  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!
  """When paginating backwards, the cursor to continue."""
  startCursor: Cursor
  """When paginating forwards, the cursor to continue."""
  endCursor: Cursor
}
type Query {
  """Fetches an object given its ID."""
  node(
    """ID of the object."""
    id: ID!
  ): Node
  """Lookup nodes by a list of IDs."""
  nodes(
    """The list of node IDs."""
    ids: [ID!]!
  ): [Node]!
  authors(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come before the specified cursor."""
    before: Cursor

    """Returns the last _n_ elements from the list."""
    last: Int

    """Ordering options for Authors returned from the connection."""
    orderBy: AuthorOrder
  ): AuthorConnection!
  books(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come before the specified cursor."""
    before: Cursor

    """Returns the last _n_ elements from the list."""
    last: Int
  ): BookConnection!
}
"""The builtin Time type"""
scalar Time
"""
UpdateAuthorInput is used for update Author object.
Input was generated by ent.
"""
input UpdateAuthorInput {
  name: String
  email: String
  addBookIDs: [ID!]
  removeBookIDs: [ID!]
  clearBooks: Boolean
}
"""
UpdateBookInput is used for update Book object.
Input was generated by ent.
"""
input UpdateBookInput {
  title: String
  genre: String
  publicationDate: String
  isbn: String
  createdAt: Time
  authorID: ID
  clearAuthor: Boolean
}
